{"version":3,"sources":["../src/core/paymaster/prepare-typed-data.ts","../src/core/paymaster/execute-sponsored-transaction.ts","../src/core/chipi-client.ts"],"names":["fetchBuildTypedData","fetchExecuteTransaction","BASE_URL"],"mappings":";;;;;AAGA,eAAsB,yBAAyB,KAA+B,EAAA;AAC5E,EAAA,MAAM,WAAW,MAAMA,8BAAA;AAAA,IACrB,KAAM,CAAA,SAAA;AAAA,IACN,KAAM,CAAA,KAAA;AAAA,IACN,MAAA;AAAA,IACA,MAAA;AAAA,IACA,KAAM,CAAA;AAAA,GACR;AACA,EAAO,OAAA,QAAA;AACT;ACTA,eAAsB,oCACpB,KACA,EAAA;AACA,EAAA,MAAM,EAAE,SAAA,EAAW,QAAU,EAAA,aAAA,EAAe,SAAY,GAAA,KAAA;AACxD,EAAA,MAAM,qBAAqB,MAAMC,kCAAA;AAAA,IAC/B,SAAA;AAAA,IACA,IAAA,CAAK,UAAU,QAAQ,CAAA;AAAA,IACvB,aAAA;AAAA,IACA;AAAA,GACF;AACA,EAAA,OAAO,kBAAmB,CAAA,eAAA;AAC5B;;;ACJO,IAAM,cAAN,MAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvB,YAAY,MAAwB,EAAA;AAClC,IAAA,IAAA,CAAK,gBAAmB,GAAA;AAAA,MACtB,OAAS,EAAAC,mBAAA;AAAA,MACT,QAAQ,MAAO,CAAA;AAAA,KACjB;AAAA;AAGF,EAEA,MAAM,iBACJ,KAC2B,EAAA;AAC3B,IAAA,OAAO,wBAAyB,CAAA;AAAA,MAC9B,GAAG,KAAA;AAAA,MACH,SAAS,IAAK,CAAA;AAAA,KACf,CAAA;AAAA;AACH,EAEA,MAAM,4BACJ,KACwB,EAAA;AACxB,IAAA,OAAO,mCAAoC,CAAA;AAAA,MACzC,GAAG,KAAA;AAAA,MACH,SAAS,IAAK,CAAA;AAAA,KACf,CAAA;AAAA;AAEL","file":"index.js","sourcesContent":["import { fetchBuildTypedData } from \"@avnu/gasless-sdk\";\nimport { PrepareTypedDataParams } from \"../types\";\n\nexport async function prepareTypedDataInternal(input: PrepareTypedDataParams) {\n  const typeData = await fetchBuildTypedData(\n    input.publicKey,\n    input.calls,\n    undefined,\n    undefined,\n    input.options\n  );\n  return typeData;\n}\n","import { fetchExecuteTransaction } from \"@avnu/gasless-sdk\";\nimport { ExecuteSponsoredTransactionParams } from \"../types\";\n\nexport async function executeSponsoredTransactionInternal(\n  input: ExecuteSponsoredTransactionParams\n) {\n  const { publicKey, typeData, userSignature, options } = input;\n  const executeTransaction = await fetchExecuteTransaction(\n    publicKey,\n    JSON.stringify(typeData),\n    userSignature,\n    options\n  );\n  return executeTransaction.transactionHash;\n}\n","import { BASE_URL, GaslessOptions } from \"@avnu/gasless-sdk\";\nimport type {\n  ChipiSDKConfig,\n  ExecuteSponsoredTransactionParams,\n  PrepareTypedDataParams,\n} from \"./types\";\nimport { prepareTypedDataInternal } from \"./paymaster/prepare-typed-data\";\nimport { TypedData } from \"starknet\";\nimport { executeSponsoredTransactionInternal } from \"./paymaster/execute-sponsored-transaction\";\n\nexport class ChipiClient {\n  private paymasterOptions: GaslessOptions;\n  // private rpcUrl: string;\n  // private argentClassHash: string;\n  // private contractAddress: string;\n  // private contractEntryPoint: string;\n\n  constructor(config: ChipiSDKConfig) {\n    this.paymasterOptions = {\n      baseUrl: BASE_URL,\n      apiKey: config.apiKey,\n    };\n    // this.rpcUrl = config.rpcUrl;\n    // this.argentClassHash = config.argentClassHash;\n  }\n\n  async prepareTypedData(\n    input: Omit<PrepareTypedDataParams, \"options\">\n  ): Promise<TypedData | null> {\n    return prepareTypedDataInternal({\n      ...input,\n      options: this.paymasterOptions,\n    });\n  }\n\n  async executeSponsoredTransaction(\n    input: ExecuteSponsoredTransactionParams\n  ): Promise<string | null> {\n    return executeSponsoredTransactionInternal({\n      ...input,\n      options: this.paymasterOptions,\n    });\n  }\n}\n\n// // Export types\n// export type {\n//   ChipiSDKConfig,\n//   WalletData,\n//   TransactionResult,\n// };\n"]}